name: Test and publish

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  static-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root
      - name: Lint
        run: |
          poetry run flake8 .
          poetry run mypy --warn-unused-ignores .
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bitcoind_version: ["0.19", "0.20", "0.21", "22", "23", "24"]
    steps:
      - uses: actions/checkout@v4
      - name: Start bitcoind
        uses: docker://docker
        with:
          args: >-
            docker run
            --name=bitcoind -d --restart=unless-stopped
            -p 8332:8332 -p 8333:8333 -p 8334:8334
            --health-cmd="curl -s --fail --data-binary '{\"jsonrpc\":\"1.0\",\"id\":\"curltext\",\"method\":\"getblockchaininfo\",\"params\":[]}' -H 'content-type:text/plain;' http://bitcoind:bitcoind@localhost:8332/ || exit 1"
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
            -v "${{ github.workspace }}/staff/bitcoin.conf:/home/bitcoin/.bitcoin/bitcoin.conf"
            ruimarinho/bitcoin-core:${{ matrix.bitcoind_version }}
      - name: "Wait until the container is healthy"
        uses: raschmitt/wait-for-healthy-container/@master
        with:
          container-name: bitcoind
          timeout: 20
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root
      - name: Test
        env:
          BITCOIND: http://bitcoind:bitcoind@localhost:8332
        run: |
          poetry run pytest -vx --log-level=0 --cov=bitcoind_exporter --asyncio-mode=strict tests/

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: [test, static-check]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
